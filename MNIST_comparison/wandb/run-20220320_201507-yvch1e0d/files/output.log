
Begining train, args:Namespace(output_path=None, seed=0, lr=0.001, batch_size=32, epochs=100, env_name='cifar10_env', save_epochs=False, device='cuda')
  0%|                                                                                   | 0/1875 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/home/ido/projects/MNIST_comparison/train_convnet.py", line 162, in <module>
    model, optimizer, _ = training_loop(model, criterion, optimizer, \
  File "/home/ido/projects/MNIST_comparison/train_convnet.py", line 110, in training_loop
    model, optimizer, train_loss = train(train_loader, model, criterion, optimizer, device)
  File "/home/ido/projects/MNIST_comparison/train_convnet.py", line 42, in train
    for X, y_true in tqdm(train_loader, total=len(train_loader)):
  File "/home/ido/miniconda3/envs/sparsity_probe_env/lib/python3.9/site-packages/tqdm/std.py", line 1195, in __iter__
    for obj in iterable:
  File "/home/ido/miniconda3/envs/sparsity_probe_env/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 530, in __next__
    data = self._next_data()
  File "/home/ido/miniconda3/envs/sparsity_probe_env/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 570, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/ido/miniconda3/envs/sparsity_probe_env/lib/python3.9/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    return self.collate_fn(data)
  File "/home/ido/miniconda3/envs/sparsity_probe_env/lib/python3.9/site-packages/torch/utils/data/_utils/collate.py", line 172, in default_collate
    return [default_collate(samples) for samples in transposed]  # Backwards compatibility.
  File "/home/ido/miniconda3/envs/sparsity_probe_env/lib/python3.9/site-packages/torch/utils/data/_utils/collate.py", line 172, in <listcomp>
    return [default_collate(samples) for samples in transposed]  # Backwards compatibility.
  File "/home/ido/miniconda3/envs/sparsity_probe_env/lib/python3.9/site-packages/torch/utils/data/_utils/collate.py", line 180, in default_collate
    raise TypeError(default_collate_err_msg_format.format(elem_type))
TypeError: default_collate: batch must contain tensors, numpy arrays, numbers, dicts or lists; found <class 'PIL.Image.Image'>